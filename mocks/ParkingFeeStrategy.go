// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// ParkingFeeStrategy is an autogenerated mock type for the ParkingFeeStrategy type
type ParkingFeeStrategy struct {
	mock.Mock
}

// CalculateFee provides a mock function with given fields: duration
func (_m *ParkingFeeStrategy) CalculateFee(duration time.Duration) float64 {
	ret := _m.Called(duration)

	if len(ret) == 0 {
		panic("no return value specified for CalculateFee")
	}

	var r0 float64
	if rf, ok := ret.Get(0).(func(time.Duration) float64); ok {
		r0 = rf(duration)
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// NewParkingFeeStrategy creates a new instance of ParkingFeeStrategy. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewParkingFeeStrategy(t interface {
	mock.TestingT
	Cleanup(func())
}) *ParkingFeeStrategy {
	mock := &ParkingFeeStrategy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
